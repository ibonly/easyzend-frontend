{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"screen\"\n};\nconst _hoisted_2 = {\n  key: 1,\n  class: \"main-page\"\n};\nconst _hoisted_3 = {\n  class: \"input-group\"\n};\nconst _hoisted_4 = [\"value\"];\nconst _hoisted_5 = {\n  class: \"button-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_user_details_component = _resolveComponent(\"user-details-component\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.showUserDetails ? (_openBlock(), _createBlock(_component_user_details_component, {\n    key: 0\n  })) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"Add a bank using your debit card\", -1)), _cache[4] || (_cache[4] = _createElementVNode(\"p\", null, \"Linking an external account allows you to move money in and out of your balance.\", -1)), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"select\", {\n    id: \"listOfBanks\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedBank = $event)\n  }, [_cache[2] || (_cache[2] = _createElementVNode(\"option\", {\n    value: \"\",\n    selected: \"\"\n  }, \"Select Bank\", -1)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.bankList, bank => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: bank.id,\n      value: bank.id\n    }, _toDisplayString(bank.name), 9, _hoisted_4);\n  }), 128))], 512), [[_vModelSelect, $data.selectedBank]])]), _cache[5] || (_cache[5] = _createElementVNode(\"div\", {\n    class: \"input-group\"\n  }, [_createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"accountNumber\",\n    placeholder: \"Account Number\"\n  })], -1)), _cache[6] || (_cache[6] = _createElementVNode(\"div\", {\n    class: \"input-group\"\n  }, [_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"accountName\",\n    placeholder: \"Account Name\",\n    readonly: \"\"\n  })], -1)), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n    class: \"primary\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.submit && $options.submit(...args))\n  }, \" Add Bank \")])]))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","$data","showUserDetails","_createBlock","_component_user_details_component","_hoisted_2","_createElementVNode","_hoisted_3","id","_cache","$event","selectedBank","value","selected","_Fragment","_renderList","bankList","bank","name","_hoisted_4","type","placeholder","readonly","_hoisted_5","onClick","args","$options","submit"],"sources":["/home/runner/work/easyzend-frontend/easyzend-frontend/src/components/main/Bank.vue"],"sourcesContent":["<template>\n    <div class=\"screen\">\n        <user-details-component v-if=\"showUserDetails\"></user-details-component>\n\n        <div class=\"main-page\" v-else>\n            <h2>Add a bank using your debit card</h2>\n            <p>Linking an external account allows you to move money in and out of your balance.</p>\n\n            <div class=\"input-group\">\n                <select id=\"listOfBanks\" v-model=\"selectedBank\">\n                    <option value=\"\" selected>Select Bank</option>\n                    <option v-for=\"bank in bankList\" :key=\"bank.id\" :value=\"bank.id\">{{ bank.name }}</option>\n                </select>\n            </div>\n\n            <div class=\"input-group\">\n                <input type=\"number\" id=\"accountNumber\" placeholder=\"Account Number\" />\n            </div>\n\n            <div class=\"input-group\">\n                <input type=\"text\" id=\"accountName\" placeholder=\"Account Name\" readonly />\n            </div>\n\n            <div class=\"button-group\">\n                <button class=\"primary\" @click=\"submit\">\n                    Add Bank\n                </button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport UserDetailsComponent from './UserDetails.vue';\n\nexport default {\n    name: 'BankComponent',\n    data() {\n        return {\n            showUserDetails: false,\n            bankList: [],\n            selectedBank: null\n        };\n    },\n    created() {\n        this.fetchBankList();\n    },\n    components: {\n        UserDetailsComponent\n    },\n    methods: {\n        async fetchBankList() {\n            // try {\n            //     const response = await fetch('https://api.example.com/banks');\n            //     if (response.ok) {\n            //         this.bankList = await response.json();\n            this.bankList = [\n                { value: 'us', name: 'United States' },\n                { value: 'ca', name: 'Canada' },\n                { value: 'uk', name: 'United Kingdom' }\n            ];\n            //     } else {\n            //         console.error('Failed to fetch bank list');\n            //     }\n            // } catch (error) {\n            //     console.error('Error fetching bank list:', error);\n            // }\n        },\n        async submit() {\n            console.log(333333);\n            // Replace with your actual API call\n            // const response = await fetch('https://api.example.com/submit', {\n            //     method: 'POST',\n            //     headers: {\n            //         'Content-Type': 'application/json'\n            //     },\n            //     body: JSON.stringify({ phoneNumber: this.phoneNumber })\n            // });\n\n            // if (response.ok) {\n            //     console.log('Next step with phone number:', this.phoneNumber);\n            // Show userDetails component\n            this.showUserDetails = true;\n            // } else {\n            //     console.error('API call failed');\n            // }\n            // } catch (error) {\n            //     console.error('Error during API call:', error);\n            // }\n        }\n    }\n}\n</script>\n\n<style scoped>\n/* Removed styles moved to global.css */\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAQ;;EADvBC,GAAA;EAIaD,KAAK,EAAC;;;EAIFA,KAAK,EAAC;AAAa;mBARpC;;EAuBiBA,KAAK,EAAC;AAAc;;;uBAtBjCE,mBAAA,CA4BM,OA5BNC,UA4BM,GA3B4BC,KAAA,CAAAC,eAAe,I,cAA7CC,YAAA,CAAwEC,iCAAA;IAFhFN,GAAA;EAAA,O,cAIQC,mBAAA,CAwBM,OAxBNM,UAwBM,G,0BAvBFC,mBAAA,CAAyC,YAArC,kCAAgC,Q,0BACpCA,mBAAA,CAAuF,WAApF,kFAAgF,QAEnFA,mBAAA,CAKM,OALNC,UAKM,G,gBAJFD,mBAAA,CAGS;IAHDE,EAAE,EAAC,aAAa;IATxC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IASkDT,KAAA,CAAAU,YAAY,GAAAD,MAAA;gCAC1CJ,mBAAA,CAA8C;IAAtCM,KAAK,EAAC,EAAE;IAACC,QAAQ,EAAR;KAAS,aAAW,S,kBACrCd,mBAAA,CAAyFe,SAAA,QAX7GC,WAAA,CAW2Cd,KAAA,CAAAe,QAAQ,EAAhBC,IAAI;yBAAnBlB,mBAAA,CAAyF;MAAvDD,GAAG,EAAEmB,IAAI,CAACT,EAAE;MAAGI,KAAK,EAAEK,IAAI,CAACT;wBAAOS,IAAI,CAACC,IAAI,MAXjGC,UAAA;qCASkDlB,KAAA,CAAAU,YAAY,E,+BAMlDL,mBAAA,CAEM;IAFDT,KAAK,EAAC;EAAa,IACpBS,mBAAA,CAAuE;IAAhEc,IAAI,EAAC,QAAQ;IAACZ,EAAE,EAAC,eAAe;IAACa,WAAW,EAAC;uCAGxDf,mBAAA,CAEM;IAFDT,KAAK,EAAC;EAAa,IACpBS,mBAAA,CAA0E;IAAnEc,IAAI,EAAC,MAAM;IAACZ,EAAE,EAAC,aAAa;IAACa,WAAW,EAAC,cAAc;IAACC,QAAQ,EAAR;aAGnEhB,mBAAA,CAIM,OAJNiB,UAIM,GAHFjB,mBAAA,CAES;IAFDT,KAAK,EAAC,SAAS;IAAE2B,OAAK,EAAAf,MAAA,QAAAA,MAAA,UAAAgB,IAAA,KAAEC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;KAAE,YAExC,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}