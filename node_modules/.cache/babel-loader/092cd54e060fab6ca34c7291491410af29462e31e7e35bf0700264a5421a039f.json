{"ast":null,"code":"import UserDetailsComponent from './UserDetails.vue';\nexport default {\n  name: 'BankComponent',\n  data() {\n    return {\n      showUserDetails: false,\n      bankList: [],\n      selectedBank: null\n    };\n  },\n  created() {\n    this.fetchBankList();\n  },\n  components: {\n    UserDetailsComponent\n  },\n  methods: {\n    async fetchBankList() {\n      // try {\n      //     const response = await fetch('https://api.example.com/banks');\n      //     if (response.ok) {\n      //         this.bankList = await response.json();\n      this.bankList = [{\n        value: 'us',\n        name: 'United States'\n      }, {\n        value: 'ca',\n        name: 'Canada'\n      }, {\n        value: 'uk',\n        name: 'United Kingdom'\n      }];\n      //     } else {\n      //         console.error('Failed to fetch bank list');\n      //     }\n      // } catch (error) {\n      //     console.error('Error fetching bank list:', error);\n      // }\n    },\n    async submit() {\n      console.log(333333);\n      // Replace with your actual API call\n      // const response = await fetch('https://api.example.com/submit', {\n      //     method: 'POST',\n      //     headers: {\n      //         'Content-Type': 'application/json'\n      //     },\n      //     body: JSON.stringify({ phoneNumber: this.phoneNumber })\n      // });\n\n      // if (response.ok) {\n      //     console.log('Next step with phone number:', this.phoneNumber);\n      // Show userDetails component\n      this.showUserDetails = true;\n      // } else {\n      //     console.error('API call failed');\n      // }\n      // } catch (error) {\n      //     console.error('Error during API call:', error);\n      // }\n    }\n  }\n};","map":{"version":3,"names":["UserDetailsComponent","name","data","showUserDetails","bankList","selectedBank","created","fetchBankList","components","methods","value","submit","console","log"],"sources":["/home/runner/work/easyzend-frontend/easyzend-frontend/src/components/main/Bank.vue"],"sourcesContent":["<template>\n    <div class=\"screen\">\n        <user-details-component v-if=\"showUserDetails\"></user-details-component>\n\n        <div class=\"main-page\" v-else>\n            <h2>Add a bank using your debit card</h2>\n            <p>Linking an external account allows you to move money in and out of your balance.</p>\n\n            <div class=\"input-group\">\n                <select id=\"listOfBanks\" v-model=\"selectedBank\">\n                    <option value=\"\" selected>Select Bank</option>\n                    <option v-for=\"bank in bankList\" :key=\"bank.id\" :value=\"bank.id\">{{ bank.name }}</option>\n                </select>\n            </div>\n\n            <div class=\"input-group\">\n                <input type=\"number\" id=\"accountNumber\" placeholder=\"Account Number\" />\n            </div>\n\n            <div class=\"input-group\">\n                <input type=\"text\" id=\"accountName\" placeholder=\"Account Name\" readonly />\n            </div>\n\n            <div class=\"button-group\">\n                <button class=\"primary\" @click=\"submit\">\n                    Add Bank\n                </button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport UserDetailsComponent from './UserDetails.vue';\n\nexport default {\n    name: 'BankComponent',\n    data() {\n        return {\n            showUserDetails: false,\n            bankList: [],\n            selectedBank: null\n        };\n    },\n    created() {\n        this.fetchBankList();\n    },\n    components: {\n        UserDetailsComponent\n    },\n    methods: {\n        async fetchBankList() {\n            // try {\n            //     const response = await fetch('https://api.example.com/banks');\n            //     if (response.ok) {\n            //         this.bankList = await response.json();\n            this.bankList = [\n                { value: 'us', name: 'United States' },\n                { value: 'ca', name: 'Canada' },\n                { value: 'uk', name: 'United Kingdom' }\n            ];\n            //     } else {\n            //         console.error('Failed to fetch bank list');\n            //     }\n            // } catch (error) {\n            //     console.error('Error fetching bank list:', error);\n            // }\n        },\n        async submit() {\n            console.log(333333);\n            // Replace with your actual API call\n            // const response = await fetch('https://api.example.com/submit', {\n            //     method: 'POST',\n            //     headers: {\n            //         'Content-Type': 'application/json'\n            //     },\n            //     body: JSON.stringify({ phoneNumber: this.phoneNumber })\n            // });\n\n            // if (response.ok) {\n            //     console.log('Next step with phone number:', this.phoneNumber);\n            // Show userDetails component\n            this.showUserDetails = true;\n            // } else {\n            //     console.error('API call failed');\n            // }\n            // } catch (error) {\n            //     console.error('Error during API call:', error);\n            // }\n        }\n    }\n}\n</script>\n\n<style scoped>\n/* Removed styles moved to global.css */\n</style>"],"mappings":"AAiCA,OAAOA,oBAAmB,MAAO,mBAAmB;AAEpD,eAAe;EACXC,IAAI,EAAE,eAAe;EACrBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,eAAe,EAAE,KAAK;MACtBC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IAClB,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,aAAa,CAAC,CAAC;EACxB,CAAC;EACDC,UAAU,EAAE;IACRR;EACJ,CAAC;EACDS,OAAO,EAAE;IACL,MAAMF,aAAaA,CAAA,EAAG;MAClB;MACA;MACA;MACA;MACA,IAAI,CAACH,QAAO,GAAI,CACZ;QAAEM,KAAK,EAAE,IAAI;QAAET,IAAI,EAAE;MAAgB,CAAC,EACtC;QAAES,KAAK,EAAE,IAAI;QAAET,IAAI,EAAE;MAAS,CAAC,EAC/B;QAAES,KAAK,EAAE,IAAI;QAAET,IAAI,EAAE;MAAiB,EACzC;MACD;MACA;MACA;MACA;MACA;MACA;IACJ,CAAC;IACD,MAAMU,MAAMA,CAAA,EAAG;MACXC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA,IAAI,CAACV,eAAc,GAAI,IAAI;MAC3B;MACA;MACA;MACA;MACA;MACA;IACJ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}