{"ast":null,"code":"import KeypadComponent from './Section/Keypad.vue';\nimport ContactComponent from './Section/Contact.vue';\nimport TransactionListComponent from './Pages/Transaction.vue';\nimport SettingsComponent from './Pages/Settings.vue';\nimport ProfileComponent from './Pages/Success.vue';\nimport NotificationComponent from './Pages/Notification.vue';\nimport ProcessComponent from './Pages/Precess.vue';\nexport default {\n  name: 'HomeComponent',\n  components: {\n    KeypadComponent,\n    ContactComponent,\n    ProfileComponent,\n    SettingsComponent,\n    NotificationComponent,\n    TransactionListComponent,\n    ProcessComponent\n  },\n  data() {\n    return {\n      amount: \"0\",\n      keys: [1, 2, 3, 4, 5, 6, 7, 8, 9, \".\", 0, \"⌫\"],\n      currentPage: \"home\",\n      transactions: [{\n        id: 1,\n        name: \"Gotinder.com Help\",\n        amount: \"179.99\",\n        icon: \"location\"\n      }, {\n        id: 2,\n        name: \"Crpsnglc.com\",\n        amount: \"39.99\",\n        icon: \"location\"\n      }, {\n        id: 3,\n        name: \"SNGRRLLGT.com\",\n        amount: \"39.99\",\n        icon: \"location-red\"\n      }, {\n        id: 4,\n        name: \"Amazon\",\n        amount: \"142.87\",\n        icon: \"amazon\"\n      }],\n      selectedContacts: [],\n      showEditContacts: false,\n      contactList: [],\n      bankList: [],\n      showBreadcrumbs: true\n    };\n  },\n  methods: {\n    pressKey(key) {\n      if (key === \"⌫\") {\n        this.amount = this.amount.slice(0, -1) || \"0\";\n      } else {\n        this.amount = this.amount === \"0\" ? key.toString() : this.amount + key;\n      }\n    },\n    requestMoney() {\n      alert(`Requesting $${this.amount}`);\n    },\n    payMoney() {\n      this.showBreadcrumbs = false;\n      this.changePage('success');\n    },\n    changePage(page) {\n      this.currentPage = page;\n    },\n    openScanPage() {\n      this.changePage('scan');\n    },\n    openNotificationPage() {\n      this.changePage('notification');\n    },\n    updateContacts(contacts) {\n      this.selectedContacts = contacts;\n    },\n    editContacts() {\n      this.showEditContacts = true;\n      this.contactList = this.selectedContacts;\n    },\n    saveContacts() {\n      this.showEditContacts = false;\n      this.updateContacts(this.contactList);\n    }\n  }\n};","map":{"version":3,"names":["KeypadComponent","ContactComponent","TransactionListComponent","SettingsComponent","ProfileComponent","NotificationComponent","ProcessComponent","name","components","data","amount","keys","currentPage","transactions","id","icon","selectedContacts","showEditContacts","contactList","bankList","showBreadcrumbs","methods","pressKey","key","slice","toString","requestMoney","alert","payMoney","changePage","page","openScanPage","openNotificationPage","updateContacts","contacts","editContacts","saveContacts"],"sources":["/home/runner/work/easyzend-frontend/easyzend-frontend/src/components/private/Home.vue"],"sourcesContent":["<template>\n  <div class=\"app\">\n    <contact-component @update-contacts=\"updateContacts\" v-if=\"showBreadcrumbs\" />\n    <div class=\"breadcrumbs\" v-if=\"showBreadcrumbs\">\n      <span v-for=\"contact in selectedContacts\" :key=\"contact.id\" class=\"breadcrumb\" @click=\"editContacts\">{{ contact.name }}</span>\n    </div>\n    <div v-if=\"showEditContacts\" class=\"edit-contacts\">\n      <select id=\"listOfBanks\" v-model=\"contactList\" multiple @change=\"updateSelectedContacts\">\n        <option value=\"\" selected>Select Bank</option>\n        <option v-for=\"bank in contactList\" :key=\"bank.id\" :value=\"bank\">{{ bank.name }}</option>\n      </select>\n      <button @click=\"saveContacts\">Save</button>\n    </div>\n    <main v-if=\"currentPage === 'home'\">\n      <keypad-component :amount=\"amount\" :keys=\"keys\" @press-key=\"pressKey\" @request-money=\"requestMoney\"\n        @pay-money=\"payMoney\"></keypad-component>\n    </main>\n    <main v-if=\"currentPage === 'scan'\">\n      <transaction-list-component :transactions=\"transactions\"></transaction-list-component>\n    </main>\n    <main v-if=\"currentPage === 'profile'\">\n      <profile-component :transactions=\"transactions\"></profile-component>\n    </main>\n    <main v-if=\"currentPage === 'settings'\">\n      <settings-component :transactions=\"transactions\"></settings-component>\n    </main>\n    <main v-if=\"currentPage === 'notification'\">\n      <notification-component></notification-component>\n    </main>\n    <main v-if=\"currentPage === 'success'\">\n      <process-component :amount=\"amount\" :contacts=\"selectedContacts\"></process-component>\n    </main>\n  </div>\n</template>\n\n<script>\nimport KeypadComponent from './Section/Keypad.vue';\nimport ContactComponent from './Section/Contact.vue';\nimport TransactionListComponent from './Pages/Transaction.vue';\nimport SettingsComponent from './Pages/Settings.vue';\nimport ProfileComponent from './Pages/Success.vue';\nimport NotificationComponent from './Pages/Notification.vue';\nimport ProcessComponent from './Pages/Precess.vue';\n\nexport default {\n  name: 'HomeComponent',\n  components: {\n    KeypadComponent,\n    ContactComponent,\n    ProfileComponent,\n    SettingsComponent,\n    NotificationComponent,\n    TransactionListComponent,\n    ProcessComponent\n  },\n  data() {\n    return {\n      amount: \"0\",\n      keys: [1, 2, 3, 4, 5, 6, 7, 8, 9, \".\", 0, \"⌫\"],\n      currentPage: \"home\",\n      transactions: [\n        { id: 1, name: \"Gotinder.com Help\", amount: \"179.99\", icon: \"location\" },\n        { id: 2, name: \"Crpsnglc.com\", amount: \"39.99\", icon: \"location\" },\n        { id: 3, name: \"SNGRRLLGT.com\", amount: \"39.99\", icon: \"location-red\" },\n        { id: 4, name: \"Amazon\", amount: \"142.87\", icon: \"amazon\" }\n      ],\n      selectedContacts: [],\n      showEditContacts: false,\n      contactList: [],\n      bankList: [],\n      showBreadcrumbs: true\n    };\n  },\n  methods: {\n    pressKey(key) {\n      if (key === \"⌫\") {\n        this.amount = this.amount.slice(0, -1) || \"0\";\n      } else {\n        this.amount = this.amount === \"0\" ? key.toString() : this.amount + key;\n      }\n    },\n    requestMoney() {\n      alert(`Requesting $${this.amount}`);\n    },\n    payMoney() {\n      this.showBreadcrumbs = false;\n      this.changePage('success');\n    },\n    changePage(page) {\n      this.currentPage = page;\n    },\n    openScanPage() {\n      this.changePage('scan');\n    },\n    openNotificationPage() {\n      this.changePage('notification');\n    },\n    updateContacts(contacts) {\n      this.selectedContacts = contacts;\n    },\n    editContacts() {\n      this.showEditContacts = true;\n      this.contactList = this.selectedContacts;\n    },\n    saveContacts() {\n      this.showEditContacts = false;\n      this.updateContacts(this.contactList);\n    }\n  }\n}\n</script>\n\n<style scoped>\n.breadcrumbs {\n  margin-top: -20px;\n  margin: 10px 0;\n}\n.breadcrumb {\n  display: inline-block;\n  margin: 5px;\n  padding: 5px 10px;\n  background-color: #f0f0f0;\n  border-radius: 5px;\n  background-color: #e1ffe7;\n  color: #000;\n  cursor: pointer;\n}\n.edit-contacts {\n  margin: 10px 0;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}