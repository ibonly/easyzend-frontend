{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"input-group\"\n};\nconst _hoisted_2 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"select\", {\n    id: \"listOfBanks\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.contactList = $event),\n    multiple: \"\",\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.updateSelectedContacts && $options.updateSelectedContacts(...args))\n  }, [_cache[2] || (_cache[2] = _createElementVNode(\"option\", {\n    value: \"\",\n    selected: \"\"\n  }, \"Select Bank\", -1)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.bankList, bank => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: bank.id,\n      value: bank\n    }, _toDisplayString(bank.name), 9, _hoisted_2);\n  }), 128))], 544), [[_vModelSelect, $data.contactList]])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","id","_cache","$event","$data","contactList","multiple","onChange","args","$options","updateSelectedContacts","value","selected","_Fragment","_renderList","bankList","bank","key","name","_hoisted_2"],"sources":["/home/runner/work/easyzend-frontend/easyzend-frontend/src/components/private/Section/Contact.vue"],"sourcesContent":["<template>\n    <div class=\"input-group\">\n        <select id=\"listOfBanks\" v-model=\"contactList\" multiple @change=\"updateSelectedContacts\">\n            <option value=\"\" selected>Select Bank</option>\n            <option v-for=\"bank in bankList\" :key=\"bank.id\" :value=\"bank\">{{ bank.name }}</option>\n        </select>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'ContactComponent',\n    data() {\n        return {\n            showUserDetails: false,\n            bankList: [],\n            contactList: []\n        };\n    },\n    created() {\n        this.fetchBankList();\n    },\n    methods: {\n        async fetchBankList() {\n            // try {\n            //     const response = await fetch('https://api.example.com/banks');\n            //     if (response.ok) {\n            //         this.bankList = await response.json();\n            this.bankList = [\n                { value: '1', name: 'John Doe 1' },\n                { value: '2', name: 'Jane Doe 2' },\n                { value: '3', name: 'Jadon Doe 3' },\n                { value: '4', name: 'John Doe 4' },\n                { value: '5', name: 'Jane Doe 5' },\n                { value: '6', name: 'John Doe 6' },\n                { value: '7', name: 'Jane Doe 7' },\n                { value: '8', name: 'John Doe 8' },\n                { value: '9', name: 'Jane Doe 9' },\n                { value: '10', name: 'John Doe 10' },\n                { value: '11', name: 'Jane Doe 11' },\n                { value: '12', name: 'John Doe 12' },\n                { value: '13', name: 'Jane Doe 13' },\n                { value: '14', name: 'John Doe 14' },\n                { value: '15', name: 'Jane Doe 15' },\n                { value: '16', name: 'John Doe 16' },\n                { value: '17', name: 'Jane Doe 17' },\n                { value: '18', name: 'John Doe 18' },\n                { value: '19', name: 'Jane Doe 19' },\n            ];\n            //     } else {\n            //         console.error('Failed to fetch bank list');\n            //     }\n            // } catch (error) {\n            //     console.error('Error fetching bank list:', error);\n            // }\n        },\n        async submit() {\n            console.log(333333);\n            // Replace with your actual API call\n            // const response = await fetch('https://api.example.com/submit', {\n            //     method: 'POST',\n            //     headers: {\n            //         'Content-Type': 'application/json'\n            //     },\n            //     body: JSON.stringify({ phoneNumber: this.phoneNumber })\n            // });\n\n            // if (response.ok) {\n            //     console.log('Next step with phone number:', this.phoneNumber);\n            // Show userDetails component\n            this.showUserDetails = true;\n            // } else {\n            //     console.error('API call failed');\n            // }\n            // } catch (error) {\n            //     console.error('Error during API call:', error);\n            // }\n        },\n        updateSelectedContacts() {\n            this.$emit('update-contacts', this.contactList);\n        }\n    }\n}\n</script>\n\n<style scoped>\n/* Removed styles moved to global.css */\n.input-group {\n    margin-top: 0px;\n}\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAa;mBAD5B;;uBACIC,mBAAA,CAKM,OALNC,UAKM,G,gBAJFC,mBAAA,CAGS;IAHDC,EAAE,EAAC,aAAa;IAFhC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAE0CC,KAAA,CAAAC,WAAW,GAAAF,MAAA;IAAEG,QAAQ,EAAR,EAAQ;IAAEC,QAAM,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAC,sBAAA,IAAAD,QAAA,CAAAC,sBAAA,IAAAF,IAAA,CAAsB;gCACnFR,mBAAA,CAA8C;IAAtCW,KAAK,EAAC,EAAE;IAACC,QAAQ,EAAR;KAAS,aAAW,S,kBACrCd,mBAAA,CAAsFe,SAAA,QAJlGC,WAAA,CAImCV,KAAA,CAAAW,QAAQ,EAAhBC,IAAI;yBAAnBlB,mBAAA,CAAsF;MAApDmB,GAAG,EAAED,IAAI,CAACf,EAAE;MAAGU,KAAK,EAAEK;wBAASA,IAAI,CAACE,IAAI,MAJtFC,UAAA;qCAE0Cf,KAAA,CAAAC,WAAW,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}